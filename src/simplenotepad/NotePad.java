/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package simplenotepad;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.OutputStreamWriter;
import java.io.PrintWriter;

import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;

public class NotePad extends javax.swing.JFrame {

	private BufferedReader br;
	private PrintWriter pw;
    /**
     * Creates new form NotePad
     */
    public NotePad() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jToolBar1 = new javax.swing.JToolBar();
        btNew = new javax.swing.JButton();
        btOpen = new javax.swing.JButton();
        btSave = new javax.swing.JButton();
        filler1 = new javax.swing.Box.Filler(new java.awt.Dimension(0, 0), new java.awt.Dimension(0, 0), new java.awt.Dimension(32767, 0));
        btInfo = new javax.swing.JButton();
        jSplitPane1 = new javax.swing.JSplitPane();
        jPanel1 = new javax.swing.JPanel();
        tfDir = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        lst = new javax.swing.JList();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        ta = new javax.swing.JTextArea();
        jScrollPane3 = new javax.swing.JScrollPane();
        lbImage = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("::NotePad v1.1::");

        jToolBar1.setRollover(true);

        btNew.setIcon(new javax.swing.ImageIcon(getClass().getResource("/new.png"))); // NOI18N
        btNew.setFocusable(false);
        btNew.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btNew.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btNew.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btNewActionPerformed(evt);
            }
        });
        jToolBar1.add(btNew);

        btOpen.setIcon(new javax.swing.ImageIcon(getClass().getResource("/open.png"))); // NOI18N
        btOpen.setFocusable(false);
        btOpen.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btOpen.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btOpen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btOpenActionPerformed(evt);
            }
        });
        jToolBar1.add(btOpen);

        btSave.setIcon(new javax.swing.ImageIcon(getClass().getResource("/save.png"))); // NOI18N
        btSave.setFocusable(false);
        btSave.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btSave.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btSaveActionPerformed(evt);
            }
        });
        jToolBar1.add(btSave);
        jToolBar1.add(filler1);

        btInfo.setFont(new java.awt.Font("굴림", 1, 12)); // NOI18N
        btInfo.setText("Info");
        btInfo.setFocusable(false);
        btInfo.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btInfo.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btInfo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btInfoActionPerformed(evt);
            }
        });
        jToolBar1.add(btInfo);

        jSplitPane1.setDividerLocation(200);

        tfDir.setText("C:/");
        tfDir.setBorder(javax.swing.BorderFactory.createTitledBorder("::Directory::"));
        tfDir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfDirActionPerformed(evt);
            }
        });

        lst.setBorder(javax.swing.BorderFactory.createTitledBorder("::File List::"));
        lst.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                lstValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(lst);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(tfDir, javax.swing.GroupLayout.DEFAULT_SIZE, 199, Short.MAX_VALUE)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 199, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(tfDir, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 435, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jSplitPane1.setLeftComponent(jPanel1);

        ta.setColumns(20);
        ta.setRows(5);
        ta.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 102, 102), 2, true));
        jScrollPane2.setViewportView(ta);

        lbImage.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbImage.setText("No Image");
        lbImage.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jScrollPane3.setViewportView(lbImage);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 500, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 287, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 498, Short.MAX_VALUE)
            .addComponent(jScrollPane3)
        );

        jSplitPane1.setRightComponent(jPanel2);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jToolBar1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jSplitPane1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jToolBar1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSplitPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 500, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 9, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btNewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btNewActionPerformed
    	ta.setText("");
    }//GEN-LAST:event_btNewActionPerformed

    private void btOpenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btOpenActionPerformed
        int n = jfc.showOpenDialog(this);
        if(n==JFileChooser.APPROVE_OPTION) {
        	File f = jfc.getSelectedFile();
        	if(f==null) return;
        	String path1 = f.getAbsolutePath();
        	String path = path1.toLowerCase();
        	if(path.endsWith(".java")||path.endsWith(".txt")||path.endsWith(".html")) {
        		readFile(path1);
        	} else if(path.endsWith(".jpg")||path.endsWith(".png")||path.endsWith(".gif")) {
        		previewImage(path1);
        	}
        	setTitle(path);
        }
    	
    }//GEN-LAST:event_btOpenActionPerformed

    JFileChooser jfc = new JFileChooser("C:/Myjava");
    private void btSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btSaveActionPerformed
        int n = jfc.showSaveDialog(this);
        if(n==JFileChooser.APPROVE_OPTION) {
        	String contents = ta.getText(); // 파일에 저장할 내용
        	// 저장할 파일명 얻기
        	File saveFile = jfc.getSelectedFile();
        	if(saveFile==null) return;
        	String path = saveFile.getAbsolutePath();
        	setTitle(path);
        	saveFile(path, contents);
        }
    	
    }//GEN-LAST:event_btSaveActionPerformed

    private void saveFile(String path, String contents) {
		// PrintWriter와 스트림 연결
    	try {
    		FileOutputStream fos = new FileOutputStream(path);
    		OutputStreamWriter ow = new OutputStreamWriter(fos, "EUC-KR");
    		pw = new PrintWriter(ow, true);
    	// 스트림 통해서 contents 내보내기
    		pw.println(contents);
    	// 스트림 닫기
    		pw.close();
    		setTitle(path+"에 저장 완료!!");
    	} catch (IOException e) {
    		e.printStackTrace();
    	}
	}

	private void btInfoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btInfoActionPerformed
        showMsg("Welcome to NotePad\n작성자: 양진철\n작성일:2020-06-15\nversion:1.1");
    }//GEN-LAST:event_btInfoActionPerformed
    
    public void showMsg(String msg) {
    	JOptionPane.showMessageDialog(this, msg);
    }
    
    private void tfDirActionPerformed(java.awt.event.ActionEvent evt) {
    	// 1. tfDir에 입력한 값 받아오기
    	String dirStr  = tfDir.getText();
    	// 2. 유효성 체크(null, 빈문자열)
    	if(dirStr==null || dirStr.trim().isEmpty()) {
    		showMsg("디렉토리명을 입력해야 해요");
    		tfDir.requestFocus();
    		return;
    	}
    	// 3. 입력한 값이 디렉토리인지 여부 판단
    	//	디렉토리가 아니라면 "디렉토리명을 입력하세요" 다이얼로그 박스 보여주기
    	File dir = new File(dirStr);
    	Boolean b = dir.isDirectory();
    	if(!b) {
    		showMsg("디렉토리가 아닙니다. 디렉토리명을 입력하세요");
    		tfDir.setText("");
    		return;
    	}
    	// 4. 디렉토리가 맞다면, 해당 디렉토리의 파일 목록 가져와서 lst에 보여주기.
    	String[] fList = dir.list();
    	lst.setListData(fList);
    	
    }

    private void lstValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_lstValueChanged
        //System.out.println("Hello");
    	boolean b = evt.getValueIsAdjusting();
    	System.out.println(b);
    	if(!b) {
    		//1) lst에서 선택한 목록값 가져오기
    		Object obj = lst.getSelectedValue();
    		if(obj==null) return;
    		
    		String file = obj.toString();
    		if(file==null) return;
    		//2) 선택한 파일의 확장자가 .jpg, .png, .gif 파일이라면
    		//	해당 이미지를 lbImage에 보여준다.
    		String file2 = file.toLowerCase();
    		if(file2.endsWith(".jpg")||file2.endsWith(".png")||file2.endsWith(".gif")) {
    			String path = tfDir.getText()+"/"+file;
    			previewImage(path);
    		}
    		//3) 선택한 파일의 확장자가 .txt이거나 .java, .html 이라면
    		//	해당 파일의 절대경로 구해서 파일 입력스트림과 연결하여 읽어들인 후
    		//	ta에 출력해준다.
    		if(file2.endsWith(".txt")||file2.endsWith(".java")||file2.endsWith(".html")) {
    			String path = tfDir.getText()+"/"+file;
    			readFile(path);
    		}
    	}
    	
    }//GEN-LAST:event_lstValueChanged

    private void readFile(String path) {
    	// 파일과 스트림 연결하여 반복문 돌면서 읽고
    	// 읽은 내용을 ta에 출력한다.
    	try {
    		//br = new BufferedReader(new FileReader(path));
    		FileInputStream fis = new FileInputStream(path);
    		br = new BufferedReader(new InputStreamReader(fis, "EUC-KR"));
    		String line = "";
    		ta.setText("");
    		while((line=br.readLine())!=null) {
    			ta.append(line+"\r\n");
    		} //while------------
    		br.close();
    	} catch(IOException e) {
    		showMsg(e.getMessage());
    	}
		
	}

	private void previewImage(String path) {
    	ImageIcon icon = new ImageIcon(path);
		lbImage.setIcon(icon);
		lbImage.setText("");
		setTitle(path);		
	}//--------------------

	/**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(NotePad.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(NotePad.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(NotePad.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(NotePad.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new NotePad().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btInfo;
    private javax.swing.JButton btNew;
    private javax.swing.JButton btOpen;
    private javax.swing.JButton btSave;
    private javax.swing.Box.Filler filler1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JSplitPane jSplitPane1;
    private javax.swing.JToolBar jToolBar1;
    private javax.swing.JLabel lbImage;
    private javax.swing.JList lst;
    private javax.swing.JTextArea ta;
    private javax.swing.JTextField tfDir;
    // End of variables declaration//GEN-END:variables
}
